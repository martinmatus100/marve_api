{"ast":null,"code":"var _jsxFileName = \"/home/mmatus/PROYECTOS/EXTRAS/MARVEL_API/marvel-api-app/src/components/comic-grid/Comic-grid.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ComicCard from '../comic-card/ComicCard';\nimport Pagination from '../pagination/Pagination';\nimport tmdbApi from '../../api/tmdbApi';\nimport './comic-grid.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ComicGrid = props => {\n  _s();\n\n  const [items, setItems] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage] = useState(10);\n  useEffect(() => {\n    const getList = async () => {\n      let response = null;\n      const params = {\n        limit: '20'\n      };\n      response = await tmdbApi.getComicsList({\n        params\n      });\n      setItems(response.data.results);\n    };\n\n    getList();\n  }, [props]);\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = items.slice(indexOfFirstItem, indexOfLastItem);\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comic-grid\",\n    children: [currentItems.map((item, i) => /*#__PURE__*/_jsxDEV(ComicCard, {\n      item: item\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 47\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comic-grid__paginate\",\n      children: /*#__PURE__*/_jsxDEV(Pagination, {\n        itemsPerPage: itemsPerPage,\n        totalItems: items.length,\n        paginate: paginate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ComicGrid, \"MlkQvfD8duKYoJXFAy/6ANGwtrE=\");\n\n_c = ComicGrid;\nexport default ComicGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"ComicGrid\");","map":{"version":3,"names":["React","useState","useEffect","ComicCard","Pagination","tmdbApi","ComicGrid","props","items","setItems","currentPage","setCurrentPage","itemsPerPage","getList","response","params","limit","getComicsList","data","results","indexOfLastItem","indexOfFirstItem","currentItems","slice","paginate","pageNumber","map","item","i","length"],"sources":["/home/mmatus/PROYECTOS/EXTRAS/MARVEL_API/marvel-api-app/src/components/comic-grid/Comic-grid.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ComicCard from '../comic-card/ComicCard';\nimport Pagination from '../pagination/Pagination';\nimport tmdbApi from '../../api/tmdbApi';\nimport './comic-grid.scss';\n\nconst ComicGrid = props => {\n    const [items, setItems] = useState([]);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [itemsPerPage] = useState(10);\n\n    useEffect(() => {\n        const getList = async () => {\n            let response = null;\n            const params = { limit: '20' };\n            response = await tmdbApi.getComicsList({ params });\n            setItems(response.data.results);\n        }\n        getList();\n    }, [props]);\n\n    const indexOfLastItem = currentPage * itemsPerPage;\n    const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n    const currentItems = items.slice(indexOfFirstItem, indexOfLastItem);\n    const paginate = pageNumber => setCurrentPage(pageNumber);\n\n    return (\n        <div className=\"comic-grid\">\n            {\n                currentItems.map((item, i) => <ComicCard item={item} key={i} />)\n            }\n            <div className=\"comic-grid__paginate\">\n                <Pagination\n                    itemsPerPage={itemsPerPage}\n                    totalItems={items.length}\n                    paginate={paginate}\n                />\n            </div>\n        </div>\n    )\n};\n\nexport default ComicGrid;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAO,mBAAP;;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;EAAA;;EACvB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,CAAD,CAA9C;EACA,MAAM,CAACW,YAAD,IAAiBX,QAAQ,CAAC,EAAD,CAA/B;EAEAC,SAAS,CAAC,MAAM;IACZ,MAAMW,OAAO,GAAG,YAAY;MACxB,IAAIC,QAAQ,GAAG,IAAf;MACA,MAAMC,MAAM,GAAG;QAAEC,KAAK,EAAE;MAAT,CAAf;MACAF,QAAQ,GAAG,MAAMT,OAAO,CAACY,aAAR,CAAsB;QAAEF;MAAF,CAAtB,CAAjB;MACAN,QAAQ,CAACK,QAAQ,CAACI,IAAT,CAAcC,OAAf,CAAR;IACH,CALD;;IAMAN,OAAO;EACV,CARQ,EAQN,CAACN,KAAD,CARM,CAAT;EAUA,MAAMa,eAAe,GAAGV,WAAW,GAAGE,YAAtC;EACA,MAAMS,gBAAgB,GAAGD,eAAe,GAAGR,YAA3C;EACA,MAAMU,YAAY,GAAGd,KAAK,CAACe,KAAN,CAAYF,gBAAZ,EAA8BD,eAA9B,CAArB;;EACA,MAAMI,QAAQ,GAAGC,UAAU,IAAId,cAAc,CAACc,UAAD,CAA7C;;EAEA,oBACI;IAAK,SAAS,EAAC,YAAf;IAAA,WAEQH,YAAY,CAACI,GAAb,CAAiB,CAACC,IAAD,EAAOC,CAAP,kBAAa,QAAC,SAAD;MAAW,IAAI,EAAED;IAAjB,GAA4BC,CAA5B;MAAA;MAAA;MAAA;IAAA,QAA9B,CAFR,eAII;MAAK,SAAS,EAAC,sBAAf;MAAA,uBACI,QAAC,UAAD;QACI,YAAY,EAAEhB,YADlB;QAEI,UAAU,EAAEJ,KAAK,CAACqB,MAFtB;QAGI,QAAQ,EAAEL;MAHd;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAJJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAcH,CAlCD;;GAAMlB,S;;KAAAA,S;AAoCN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}